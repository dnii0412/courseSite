"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "_rsc_lib_utils_cron_ts";
exports.ids = ["_rsc_lib_utils_cron_ts"];
exports.modules = {

/***/ "(rsc)/./lib/utils/cron.ts":
/*!***************************!*\
  !*** ./lib/utils/cron.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cleanupScheduledTasks: () => (/* binding */ cleanupScheduledTasks),\n/* harmony export */   cronScheduler: () => (/* binding */ cronScheduler),\n/* harmony export */   initializeScheduledTasks: () => (/* binding */ initializeScheduledTasks)\n/* harmony export */ });\n/* harmony import */ var _payment_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./payment-utils */ \"(rsc)/./lib/utils/payment-utils.ts\");\n\n// Simple cron-like scheduler\nclass CronScheduler {\n    // Schedule a task to run every X minutes\n    scheduleEvery(minutes, taskName, task) {\n        // Clear existing interval if it exists\n        this.clearTask(taskName);\n        const interval = setInterval(async ()=>{\n            try {\n                console.log(`Running scheduled task: ${taskName}`);\n                await task();\n            } catch (error) {\n                console.error(`Error in scheduled task ${taskName}:`, error);\n            }\n        }, minutes * 60 * 1000);\n        this.intervals.set(taskName, interval);\n        // Run immediately on first schedule\n        task().catch((error)=>{\n            console.error(`Error in initial run of task ${taskName}:`, error);\n        });\n    }\n    clearTask(taskName) {\n        const interval = this.intervals.get(taskName);\n        if (interval) {\n            clearInterval(interval);\n            this.intervals.delete(taskName);\n        }\n    }\n    clearAll() {\n        this.intervals.forEach((interval)=>{\n            clearInterval(interval);\n        });\n        this.intervals.clear();\n    }\n    constructor(){\n        this.intervals = new Map();\n    }\n}\n// Global scheduler instance\nconst cronScheduler = new CronScheduler();\n// Initialize scheduled tasks\nfunction initializeScheduledTasks() {\n    // Update expired payments every 2 minutes\n    cronScheduler.scheduleEvery(2, \"updateExpiredPayments\", _payment_utils__WEBPACK_IMPORTED_MODULE_0__.updateExpiredPayments);\n    console.log(\"Scheduled tasks initialized\");\n}\n// Cleanup on app shutdown\nfunction cleanupScheduledTasks() {\n    cronScheduler.clearAll();\n    console.log(\"Scheduled tasks cleaned up\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvdXRpbHMvY3Jvbi50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXVEO0FBRXZELDZCQUE2QjtBQUM3QixNQUFNQztJQUdKLHlDQUF5QztJQUN6Q0MsY0FBY0MsT0FBZSxFQUFFQyxRQUFnQixFQUFFQyxJQUF5QixFQUFFO1FBQzFFLHVDQUF1QztRQUN2QyxJQUFJLENBQUNDLFNBQVMsQ0FBQ0Y7UUFFZixNQUFNRyxXQUFXQyxZQUFZO1lBQzNCLElBQUk7Z0JBQ0ZDLFFBQVFDLEdBQUcsQ0FBQyxDQUFDLHdCQUF3QixFQUFFTixTQUFTLENBQUM7Z0JBQ2pELE1BQU1DO1lBQ1IsRUFBRSxPQUFPTSxPQUFPO2dCQUNkRixRQUFRRSxLQUFLLENBQUMsQ0FBQyx3QkFBd0IsRUFBRVAsU0FBUyxDQUFDLENBQUMsRUFBRU87WUFDeEQ7UUFDRixHQUFHUixVQUFVLEtBQUs7UUFFbEIsSUFBSSxDQUFDUyxTQUFTLENBQUNDLEdBQUcsQ0FBQ1QsVUFBVUc7UUFFN0Isb0NBQW9DO1FBQ3BDRixPQUFPUyxLQUFLLENBQUNILENBQUFBO1lBQ1hGLFFBQVFFLEtBQUssQ0FBQyxDQUFDLDZCQUE2QixFQUFFUCxTQUFTLENBQUMsQ0FBQyxFQUFFTztRQUM3RDtJQUNGO0lBRUFMLFVBQVVGLFFBQWdCLEVBQUU7UUFDMUIsTUFBTUcsV0FBVyxJQUFJLENBQUNLLFNBQVMsQ0FBQ0csR0FBRyxDQUFDWDtRQUNwQyxJQUFJRyxVQUFVO1lBQ1pTLGNBQWNUO1lBQ2QsSUFBSSxDQUFDSyxTQUFTLENBQUNLLE1BQU0sQ0FBQ2I7UUFDeEI7SUFDRjtJQUVBYyxXQUFXO1FBQ1QsSUFBSSxDQUFDTixTQUFTLENBQUNPLE9BQU8sQ0FBQyxDQUFDWjtZQUN0QlMsY0FBY1Q7UUFDaEI7UUFDQSxJQUFJLENBQUNLLFNBQVMsQ0FBQ1EsS0FBSztJQUN0Qjs7YUFyQ1FSLFlBQXlDLElBQUlTOztBQXNDdkQ7QUFFQSw0QkFBNEI7QUFDckIsTUFBTUMsZ0JBQWdCLElBQUlyQixnQkFBZTtBQUVoRCw2QkFBNkI7QUFDdEIsU0FBU3NCO0lBQ2QsMENBQTBDO0lBQzFDRCxjQUFjcEIsYUFBYSxDQUFDLEdBQUcseUJBQXlCRixpRUFBcUJBO0lBRTdFUyxRQUFRQyxHQUFHLENBQUM7QUFDZDtBQUVBLDBCQUEwQjtBQUNuQixTQUFTYztJQUNkRixjQUFjSixRQUFRO0lBQ3RCVCxRQUFRQyxHQUFHLENBQUM7QUFDZCIsInNvdXJjZXMiOlsid2VicGFjazovL215LXYwLXByb2plY3QvLi9saWIvdXRpbHMvY3Jvbi50cz9lMDA1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVwZGF0ZUV4cGlyZWRQYXltZW50cyB9IGZyb20gJy4vcGF5bWVudC11dGlscydcblxuLy8gU2ltcGxlIGNyb24tbGlrZSBzY2hlZHVsZXJcbmNsYXNzIENyb25TY2hlZHVsZXIge1xuICBwcml2YXRlIGludGVydmFsczogTWFwPHN0cmluZywgTm9kZUpTLlRpbWVvdXQ+ID0gbmV3IE1hcCgpXG5cbiAgLy8gU2NoZWR1bGUgYSB0YXNrIHRvIHJ1biBldmVyeSBYIG1pbnV0ZXNcbiAgc2NoZWR1bGVFdmVyeShtaW51dGVzOiBudW1iZXIsIHRhc2tOYW1lOiBzdHJpbmcsIHRhc2s6ICgpID0+IFByb21pc2U8dm9pZD4pIHtcbiAgICAvLyBDbGVhciBleGlzdGluZyBpbnRlcnZhbCBpZiBpdCBleGlzdHNcbiAgICB0aGlzLmNsZWFyVGFzayh0YXNrTmFtZSlcbiAgICBcbiAgICBjb25zdCBpbnRlcnZhbCA9IHNldEludGVydmFsKGFzeW5jICgpID0+IHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGBSdW5uaW5nIHNjaGVkdWxlZCB0YXNrOiAke3Rhc2tOYW1lfWApXG4gICAgICAgIGF3YWl0IHRhc2soKVxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihgRXJyb3IgaW4gc2NoZWR1bGVkIHRhc2sgJHt0YXNrTmFtZX06YCwgZXJyb3IpXG4gICAgICB9XG4gICAgfSwgbWludXRlcyAqIDYwICogMTAwMClcbiAgICBcbiAgICB0aGlzLmludGVydmFscy5zZXQodGFza05hbWUsIGludGVydmFsKVxuICAgIFxuICAgIC8vIFJ1biBpbW1lZGlhdGVseSBvbiBmaXJzdCBzY2hlZHVsZVxuICAgIHRhc2soKS5jYXRjaChlcnJvciA9PiB7XG4gICAgICBjb25zb2xlLmVycm9yKGBFcnJvciBpbiBpbml0aWFsIHJ1biBvZiB0YXNrICR7dGFza05hbWV9OmAsIGVycm9yKVxuICAgIH0pXG4gIH1cblxuICBjbGVhclRhc2sodGFza05hbWU6IHN0cmluZykge1xuICAgIGNvbnN0IGludGVydmFsID0gdGhpcy5pbnRlcnZhbHMuZ2V0KHRhc2tOYW1lKVxuICAgIGlmIChpbnRlcnZhbCkge1xuICAgICAgY2xlYXJJbnRlcnZhbChpbnRlcnZhbClcbiAgICAgIHRoaXMuaW50ZXJ2YWxzLmRlbGV0ZSh0YXNrTmFtZSlcbiAgICB9XG4gIH1cblxuICBjbGVhckFsbCgpIHtcbiAgICB0aGlzLmludGVydmFscy5mb3JFYWNoKChpbnRlcnZhbCkgPT4ge1xuICAgICAgY2xlYXJJbnRlcnZhbChpbnRlcnZhbClcbiAgICB9KVxuICAgIHRoaXMuaW50ZXJ2YWxzLmNsZWFyKClcbiAgfVxufVxuXG4vLyBHbG9iYWwgc2NoZWR1bGVyIGluc3RhbmNlXG5leHBvcnQgY29uc3QgY3JvblNjaGVkdWxlciA9IG5ldyBDcm9uU2NoZWR1bGVyKClcblxuLy8gSW5pdGlhbGl6ZSBzY2hlZHVsZWQgdGFza3NcbmV4cG9ydCBmdW5jdGlvbiBpbml0aWFsaXplU2NoZWR1bGVkVGFza3MoKSB7XG4gIC8vIFVwZGF0ZSBleHBpcmVkIHBheW1lbnRzIGV2ZXJ5IDIgbWludXRlc1xuICBjcm9uU2NoZWR1bGVyLnNjaGVkdWxlRXZlcnkoMiwgJ3VwZGF0ZUV4cGlyZWRQYXltZW50cycsIHVwZGF0ZUV4cGlyZWRQYXltZW50cylcbiAgXG4gIGNvbnNvbGUubG9nKCdTY2hlZHVsZWQgdGFza3MgaW5pdGlhbGl6ZWQnKVxufVxuXG4vLyBDbGVhbnVwIG9uIGFwcCBzaHV0ZG93blxuZXhwb3J0IGZ1bmN0aW9uIGNsZWFudXBTY2hlZHVsZWRUYXNrcygpIHtcbiAgY3JvblNjaGVkdWxlci5jbGVhckFsbCgpXG4gIGNvbnNvbGUubG9nKCdTY2hlZHVsZWQgdGFza3MgY2xlYW5lZCB1cCcpXG59XG4iXSwibmFtZXMiOlsidXBkYXRlRXhwaXJlZFBheW1lbnRzIiwiQ3JvblNjaGVkdWxlciIsInNjaGVkdWxlRXZlcnkiLCJtaW51dGVzIiwidGFza05hbWUiLCJ0YXNrIiwiY2xlYXJUYXNrIiwiaW50ZXJ2YWwiLCJzZXRJbnRlcnZhbCIsImNvbnNvbGUiLCJsb2ciLCJlcnJvciIsImludGVydmFscyIsInNldCIsImNhdGNoIiwiZ2V0IiwiY2xlYXJJbnRlcnZhbCIsImRlbGV0ZSIsImNsZWFyQWxsIiwiZm9yRWFjaCIsImNsZWFyIiwiTWFwIiwiY3JvblNjaGVkdWxlciIsImluaXRpYWxpemVTY2hlZHVsZWRUYXNrcyIsImNsZWFudXBTY2hlZHVsZWRUYXNrcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./lib/utils/cron.ts\n");

/***/ })

};
;